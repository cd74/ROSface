// Generated by gencpp from file face1/FaceSrv1.msg
// DO NOT EDIT!


#ifndef FACE1_MESSAGE_FACESRV1_H
#define FACE1_MESSAGE_FACESRV1_H

#include <ros/service_traits.h>


#include <face1/FaceSrv1Request.h>
#include <face1/FaceSrv1Response.h>


namespace face1
{

struct FaceSrv1
{

typedef FaceSrv1Request Request;
typedef FaceSrv1Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FaceSrv1
} // namespace face1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::face1::FaceSrv1 > {
  static const char* value()
  {
    return "d8ddc17a1c61e760f5c4f563a497654c";
  }

  static const char* value(const ::face1::FaceSrv1&) { return value(); }
};

template<>
struct DataType< ::face1::FaceSrv1 > {
  static const char* value()
  {
    return "face1/FaceSrv1";
  }

  static const char* value(const ::face1::FaceSrv1&) { return value(); }
};


// service_traits::MD5Sum< ::face1::FaceSrv1Request> should match 
// service_traits::MD5Sum< ::face1::FaceSrv1 > 
template<>
struct MD5Sum< ::face1::FaceSrv1Request>
{
  static const char* value()
  {
    return MD5Sum< ::face1::FaceSrv1 >::value();
  }
  static const char* value(const ::face1::FaceSrv1Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::face1::FaceSrv1Request> should match 
// service_traits::DataType< ::face1::FaceSrv1 > 
template<>
struct DataType< ::face1::FaceSrv1Request>
{
  static const char* value()
  {
    return DataType< ::face1::FaceSrv1 >::value();
  }
  static const char* value(const ::face1::FaceSrv1Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::face1::FaceSrv1Response> should match 
// service_traits::MD5Sum< ::face1::FaceSrv1 > 
template<>
struct MD5Sum< ::face1::FaceSrv1Response>
{
  static const char* value()
  {
    return MD5Sum< ::face1::FaceSrv1 >::value();
  }
  static const char* value(const ::face1::FaceSrv1Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::face1::FaceSrv1Response> should match 
// service_traits::DataType< ::face1::FaceSrv1 > 
template<>
struct DataType< ::face1::FaceSrv1Response>
{
  static const char* value()
  {
    return DataType< ::face1::FaceSrv1 >::value();
  }
  static const char* value(const ::face1::FaceSrv1Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FACE1_MESSAGE_FACESRV1_H
